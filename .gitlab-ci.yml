stages:
    - lint
    - test
    - docker
    - run

lint:
    image: gitlab.lrz.de:5005/hm/dockerhub/golangci/golangci-lint:latest
    stage: test
    script:
        - golangci-lint run

docker-images:
    image:
        name: gitlab.lrz.de:5005/hm/dockerhub/kaniko-project/executor:debug
        entrypoint: [""]
    stage: docker
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/docker/Dockerfile.$NAME --destination $CI_REGISTRY_IMAGE/$TYPE/$NAME:$CI_COMMIT_TAG --destination $CI_REGISTRY_IMAGE/$TYPE/$NAME:latest
    parallel:
        matrix:
            - NAME: "customer"
              TYPE: "service"
            - NAME: "order"
              TYPE: "service"
            - NAME: "logger"
              TYPE: "service"
            - NAME: "payment"
              TYPE: "service"
            - NAME: "shipment"
              TYPE: "service"
            - NAME: "stock"
              TYPE: "service"
            - NAME: "supplier"
              TYPE: "service"
            - NAME: "client"
              TYPE: "client"

run-service-customer:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/customer-service-compose.yaml up -d

run-service-order:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/order-service-compose.yaml up -d

run-service-logger:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/logger-service-compose.yaml up -d

run-service-payment:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/payment-service-compose.yaml up -d

run-service-shipment:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/shipment-service-compose.yaml up -d

run-service-stock:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/stock-service-compose.yaml up -d

run-service-supplier:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/supplier-service-compose.yaml up -d

run-client:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose -f path/to/client-service-compose.yaml up -d

szenario:
    stage: run
    image: gitlab.lrz.de:5005/hm/dockerhub/docker/compose:latest
    services:
        - name: gitlab.lrz.de:5005/hm/dockerhub/docker:dind
          alias: thedockerhost
          entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker-compose pull
        - docker-compose up --abort-on-container-exit --exit-code-from=client
