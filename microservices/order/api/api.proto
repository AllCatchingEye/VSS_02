syntax = "proto3";
package orderApi;
option go_package = ".;orderApi";

service OrderService {
    rpc NewOrder (NewOrderRequest) returns (NewOrderReply){}
    rpc GetOrder (GetOrderRequest) returns (GetOrderReply){}
    rpc SetOrderStatus (SetOrderStatusRequest) returns (SetOrderStatusReply){}
    rpc SetPaymentStatus (SetPaymentStatusRequest) returns (SetPaymentStatusReply){}
    rpc SetDeliveryStatus (SetDeliveryStatusRequest) returns (SetDeliveryStatusReply){}
}

enum DELIVERY_STATUS{
    NOT_SENT = 0;
    UNDER_WAY = 1;
    DELIVERED = 2;
}

message Customer {
    string name = 1;
    Address address = 2;
}

message Address {
    string street = 1;
    string zip = 3;
    string city = 4;
    string country = 5;
}

message Order {
    uint32 customer = 1;
    map<uint32, uint32> products = 2;
    bool orderStatus = 3;
    bool paymentStatus = 4;
    DELIVERY_STATUS deliveryStatus = 5;
}

message NewOrderRequest {
    uint32 customerId = 1;
    map<uint32, uint32> products = 2;
}

message NewOrderReply {
    uint32 orderId = 1;
    Order order = 2;
}

message GetOrderRequest {
    uint32 customerId = 1;
    uint32 orderId = 2;
}

message GetOrderReply {
    uint32 orderId = 1;
    Order order = 2;
}

message SetOrderStatusRequest {
    uint32 orderId = 1;
    bool status = 2;
}

message SetOrderStatusReply {
    bool orderStatus = 1;
}

message SetPaymentStatusRequest {
    uint32 orderId = 1;
    bool status = 2;
}

message SetPaymentStatusReply {
    bool paymentStatus = 1;
}

message SetDeliveryStatusRequest {
    uint32 orderId = 1;
    DELIVERY_STATUS status = 2;
}

message SetDeliveryStatusReply {
    DELIVERY_STATUS deliveryStatus = 1;
}
